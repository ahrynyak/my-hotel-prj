#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyHotel.LINQDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyHotelDB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertRoomBooking(RoomBooking instance);
    partial void UpdateRoomBooking(RoomBooking instance);
    partial void DeleteRoomBooking(RoomBooking instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyHotelDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<RoomBooking> RoomBookings
		{
			get
			{
				return this.GetTable<RoomBooking>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomID;
		
		private string _Name;
		
		private int _Capacity;
		
		private EntitySet<RoomBooking> _RoomBookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    #endregion
		
		public Room()
		{
			this._RoomBookings = new EntitySet<RoomBooking>(new Action<RoomBooking>(this.attach_RoomBookings), new Action<RoomBooking>(this.detach_RoomBookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_RoomBooking", Storage="_RoomBookings", ThisKey="RoomID", OtherKey="RoomID")]
		public EntitySet<RoomBooking> RoomBookings
		{
			get
			{
				return this._RoomBookings;
			}
			set
			{
				this._RoomBookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoomBookings(RoomBooking entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_RoomBookings(RoomBooking entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomBooking")]
	public partial class RoomBooking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomBookingID;
		
		private int _RoomID;
		
		private string _GuestName;
		
		private string _GuestPhone;
		
		private int _NumberOfAdult;
		
		private System.Nullable<int> _NumberOfChild;
		
		private int _PricePerRoom;
		
		private System.Nullable<int> _PriceOfAdditionalBed;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _BookingStatus;
		
		private string _AdditionalInfo;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomBookingIDChanging(int value);
    partial void OnRoomBookingIDChanged();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnGuestNameChanging(string value);
    partial void OnGuestNameChanged();
    partial void OnGuestPhoneChanging(string value);
    partial void OnGuestPhoneChanged();
    partial void OnNumberOfAdultChanging(int value);
    partial void OnNumberOfAdultChanged();
    partial void OnNumberOfChildChanging(System.Nullable<int> value);
    partial void OnNumberOfChildChanged();
    partial void OnPricePerRoomChanging(int value);
    partial void OnPricePerRoomChanged();
    partial void OnPriceOfAdditionalBedChanging(System.Nullable<int> value);
    partial void OnPriceOfAdditionalBedChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnBookingStatusChanging(int value);
    partial void OnBookingStatusChanged();
    partial void OnAdditionalInfoChanging(string value);
    partial void OnAdditionalInfoChanged();
    #endregion
		
		public RoomBooking()
		{
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomBookingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomBookingID
		{
			get
			{
				return this._RoomBookingID;
			}
			set
			{
				if ((this._RoomBookingID != value))
				{
					this.OnRoomBookingIDChanging(value);
					this.SendPropertyChanging();
					this._RoomBookingID = value;
					this.SendPropertyChanged("RoomBookingID");
					this.OnRoomBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int NOT NULL")]
		public int RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuestName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GuestName
		{
			get
			{
				return this._GuestName;
			}
			set
			{
				if ((this._GuestName != value))
				{
					this.OnGuestNameChanging(value);
					this.SendPropertyChanging();
					this._GuestName = value;
					this.SendPropertyChanged("GuestName");
					this.OnGuestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuestPhone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GuestPhone
		{
			get
			{
				return this._GuestPhone;
			}
			set
			{
				if ((this._GuestPhone != value))
				{
					this.OnGuestPhoneChanging(value);
					this.SendPropertyChanging();
					this._GuestPhone = value;
					this.SendPropertyChanged("GuestPhone");
					this.OnGuestPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAdult", DbType="Int NOT NULL")]
		public int NumberOfAdult
		{
			get
			{
				return this._NumberOfAdult;
			}
			set
			{
				if ((this._NumberOfAdult != value))
				{
					this.OnNumberOfAdultChanging(value);
					this.SendPropertyChanging();
					this._NumberOfAdult = value;
					this.SendPropertyChanged("NumberOfAdult");
					this.OnNumberOfAdultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfChild", DbType="Int")]
		public System.Nullable<int> NumberOfChild
		{
			get
			{
				return this._NumberOfChild;
			}
			set
			{
				if ((this._NumberOfChild != value))
				{
					this.OnNumberOfChildChanging(value);
					this.SendPropertyChanging();
					this._NumberOfChild = value;
					this.SendPropertyChanged("NumberOfChild");
					this.OnNumberOfChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerRoom", DbType="Int NOT NULL")]
		public int PricePerRoom
		{
			get
			{
				return this._PricePerRoom;
			}
			set
			{
				if ((this._PricePerRoom != value))
				{
					this.OnPricePerRoomChanging(value);
					this.SendPropertyChanging();
					this._PricePerRoom = value;
					this.SendPropertyChanged("PricePerRoom");
					this.OnPricePerRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfAdditionalBed", DbType="Int")]
		public System.Nullable<int> PriceOfAdditionalBed
		{
			get
			{
				return this._PriceOfAdditionalBed;
			}
			set
			{
				if ((this._PriceOfAdditionalBed != value))
				{
					this.OnPriceOfAdditionalBedChanging(value);
					this.SendPropertyChanging();
					this._PriceOfAdditionalBed = value;
					this.SendPropertyChanged("PriceOfAdditionalBed");
					this.OnPriceOfAdditionalBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingStatus", DbType="Int NOT NULL")]
		public int BookingStatus
		{
			get
			{
				return this._BookingStatus;
			}
			set
			{
				if ((this._BookingStatus != value))
				{
					this.OnBookingStatusChanging(value);
					this.SendPropertyChanging();
					this._BookingStatus = value;
					this.SendPropertyChanged("BookingStatus");
					this.OnBookingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo", DbType="NVarChar(MAX)")]
		public string AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this.OnAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInfo = value;
					this.SendPropertyChanged("AdditionalInfo");
					this.OnAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_RoomBooking", Storage="_Room", ThisKey="RoomID", OtherKey="RoomID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.RoomBookings.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.RoomBookings.Add(this);
						this._RoomID = value.RoomID;
					}
					else
					{
						this._RoomID = default(int);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
